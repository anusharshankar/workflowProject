@model IEnumerable<WorkflowProject.Models.Policy>

@{
    ViewData["Title"] = "Index";
}

<h2>Index</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>
<form asp-action="Index" method="get">
    <div class="form-action no-color">
        <p>
            Find by name: <input type="text" name="searchString" value="@ViewData["currentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> | <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]"> @Html.DisplayNameFor(model => model.PTitle)</a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PDescription)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PScope)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SingleOrDefault().Procedures)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.PTitle)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PDescription)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PScope)
                </td>

                <td>
                    @foreach (var i in item.Procedures)
                    {
                        <table>
                            <tr>
                                <th>@Html.DisplayNameFor(model => model.Procedures.SingleOrDefault().PrTitle)</th>
                                <th>@Html.DisplayNameFor(model => model.Procedures.SingleOrDefault().PrDesc)</th>
                                <th>@Html.DisplayNameFor(model => model.Procedures.SingleOrDefault().PrPurpose)</th>
                            </tr>
                            <tr>
                                <td>@Html.DisplayFor(modelItem => i.PrTitle)</td>
                                <td>@Html.DisplayFor(modelItem => i.PrDesc)</td>
                                <td>@Html.DisplayFor(modelItem => i.PrPurpose)</td>
                            </tr>
                        </table>



                    }

                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.PolicyId">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.PolicyId">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.PolicyId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@*@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>*@
